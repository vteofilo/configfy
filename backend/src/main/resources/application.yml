spring:
  application:
    name: configfyapi
  r2dbc:
    url: ${SPRING_R2DBC_URL}
    username: ${SPRING_R2DBC_USERNAME}
    password: ${SPRING_R2DBC_PASSWORD}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/configfyrealm
          jwk-set-uri: http://keycloak:8080/realms/configfyrealm/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/configfyrealm
            authorization-uri: http://keycloak:8080/realms/configfyrealm/protocol/openid-connect/auth
            token-uri: http://keycloak:8080/realms/configfyrealm/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/realms/configfyrealm/protocol/openid-connect/userinfo
        registration:
          keycloak:
            client-id: configfy-api
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
jwt:
  auth:
    converter:
      resource-id: my-client
      principal-attribute: principal_username
server:
  port: 8080
logging:
  level:
    org:
      springframework:
        security: DEBUG